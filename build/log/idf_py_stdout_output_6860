[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\project\esp\ESP32_MQTT\build\bootloader\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/project/esp/ESP32_MQTT/build/bootloader/bootloader.bin"
Bootloader binary size 0x6850 bytes. 0x7b0 bytes (7%) free.
[2/9] Building C object esp-idf/connect/CMakeFiles/__idf_connect.dir/connect.c.obj
[3/9] Linking C static library esp-idf\connect\libconnect.a
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Building C object CMakeFiles/ESP32_MQTT.elf.dir/project_elf_src_esp32.c.obj
[7/9] Linking CXX executable ESP32_MQTT.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/project/esp/ESP32_MQTT/build/ESP32_MQTT.bin
[9/9] cmd.exe /C "cd /D D:\project\esp\ESP32_MQTT\build\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/project/esp/ESP32_MQTT/build/partition_table/partition-table.bin D:/project/esp/ESP32_MQTT/build/ESP32_MQTT.bin"
ESP32_MQTT.bin binary size 0xbc9d0 bytes. Smallest app partition is 0x100000 bytes. 0x43630 bytes (26%) free.
